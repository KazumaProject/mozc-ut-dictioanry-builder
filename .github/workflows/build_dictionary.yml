# .github/workflows/build_dictionary.yml

name: Build and Update Dictionaries

# Controls when the action will run.
on:
  # Allows manual runs from the Actions tab
  workflow_dispatch:

  # Runs on a schedule (twice a year)
  schedule:
    # Runs at 00:00 on January 1st and July 1st
    - cron: '0 0 1 1,7 *'

  # Runs when a tag is pushed (e.g. v1.0.0)
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    # Set a longer timeout as dictionary downloads can be slow
    timeout-minutes: 60

    steps:
      # 1. Check out your repository code
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # 3. Install dependencies
      - name: Install dependencies
        run: |
          echo "--- Installing Python dependencies ---"
          python -m pip install --upgrade pip
          pip install kanjiconv sudachipy sudachidict_core
          echo "--- Installing OS dependencies ---"
          sudo apt-get update
          sudo apt-get install -y nkf xz-utils bzip2 mecab libmecab-dev mecab-ipadic-utf8 git make curl wget build-essential

      # 4. Prepare Dictionary Files
      - name: Build and Prepare Dictionaries
        run: |
          echo "--- Setting up output directory ---"
          mkdir -p ./dic

          # --- Build Wikipedia Dictionary ---
          echo "--- Building Wikipedia Dictionary ---"
          git clone --depth 1 https://github.com/utuhiro78/mozcdic-ut-jawiki.git
          cd mozcdic-ut-jawiki
          bash make.sh
          mv work/wikipedia.*.txt ../dic/wiki.txt
          cd ..

          # --- Build NEologd Dictionary ---
          echo "--- Building NEologd Dictionary ---"
          git clone --depth 1 https://github.com/utuhiro78/mozcdic-ut-neologd.git
          cd mozcdic-ut-neologd
          bash make.sh
          mv work/NEologd.*-u.txt ../dic/neologd.txt
          cd ..
          
          # --- Build Personal Names Dictionary ---
          echo "--- Building Personal Names Dictionary ---"
          git clone --depth 1 https://github.com/utuhiro78/mozcdic-ut-personal-names.git
          cd mozcdic-ut-personal-names
          bash make.sh
          mv work/jp-names.*.txt ../dic/names.txt
          cd ..

          # --- Build Place Names Dictionary ---
          echo "--- Building Place Names Dictionary ---"
          git clone --depth 1 https://github.com/utuhiro78/mozcdic-ut-place-names.git
          cd mozcdic-ut-place-names
          bash make.sh
          mv work/jawiki-place.*.txt ../dic/place.txt
          cd ..

          echo "--- All dictionaries built. Final files: ---"
          ls -lR ./dic

      # 5. Prepare Mozc base dictionary
      - name: Prepare Mozc Dictionary
        run: |
          echo "--- Downloading Mozc dictionary files ---"
          mkdir -p ./mozc
          MOZC_BASE_URL="https://raw.githubusercontent.com/google/mozc/master/src/data/dictionary_oss"
          for i in $(seq -f "%02g" 0 9); do
            wget -P ./mozc/ "${MOZC_BASE_URL}/dictionary${i}.txt"
          done
          wget -P ./mozc/ "${MOZC_BASE_URL}/suffix.txt"
          echo "Mozc files prepared."

      # 6. Run the main Python script to filter dictionaries
      - name: Run dictionary processing script
        run: python ./process_dictionaries.py

      # 7. Commit and push on schedule
      # This step runs ONLY for scheduled events to update the repo.
      - name: Commit files
        if: github.event_name == 'schedule'
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore(bot): Automatically update dictionary files"
          file_pattern: "*.txt" # Commits all changed .txt files
          commit_user_name: "GitHub Actions Bot"
          commit_user_email: "github-actions[bot]@users.noreply.github.com"
          commit_author: "GitHub Actions Bot <github-actions[bot]@users.noreply.github.com>"

      # 8. Package and release on tag push
      # These steps run ONLY when a new tag is pushed.
      - name: Package release artifacts
        if: startsWith(github.ref, 'refs/tags/')
        run: zip dictionary-artifacts.zip *.txt

      - name: Upload build artifact
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-artifact@v4
        with:
          name: dictionary-artifacts
          path: dictionary-artifacts.zip

      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: dictionary-artifacts.zip
          name: Dictionary Release ${{ github.ref_name }}
          body: |
            Automated release of updated dictionary files.
            The attached zip file contains all generated dictionaries.

